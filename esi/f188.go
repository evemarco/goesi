// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package esi

import (
	json "encoding/json"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi(in *jlexer.Lexer, out *GetCharactersCharacterIdStats200OkList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(GetCharactersCharacterIdStats200OkList, 0, 1)
			} else {
				*out = GetCharactersCharacterIdStats200OkList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 GetCharactersCharacterIdStats200Ok
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi(out *jwriter.Writer, in GetCharactersCharacterIdStats200OkList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v GetCharactersCharacterIdStats200OkList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetCharactersCharacterIdStats200OkList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetCharactersCharacterIdStats200OkList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetCharactersCharacterIdStats200OkList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi(l, v)
}
func easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi1(in *jlexer.Lexer, out *GetCharactersCharacterIdStats200Ok) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "year":
			out.Year = int32(in.Int32())
		case "character_minutes":
			out.CharacterMinutes = int64(in.Int64())
		case "character_sessions_started":
			out.CharacterSessionsStarted = int64(in.Int64())
		case "combat_cap_drainedby_npc":
			out.CombatCapDrainedbyNpc = int64(in.Int64())
		case "combat_cap_drainedby_pc":
			out.CombatCapDrainedbyPc = int64(in.Int64())
		case "combat_cap_draining_pc":
			out.CombatCapDrainingPc = int64(in.Int64())
		case "combat_criminal_flag_set":
			out.CombatCriminalFlagSet = int64(in.Int64())
		case "combat_damage_from_np_cs_amount":
			out.CombatDamageFromNpCsAmount = int64(in.Int64())
		case "combat_damage_from_np_cs_num_shots":
			out.CombatDamageFromNpCsNumShots = int64(in.Int64())
		case "combat_damage_from_players_bomb_amount":
			out.CombatDamageFromPlayersBombAmount = int64(in.Int64())
		case "combat_damage_from_players_bomb_num_shots":
			out.CombatDamageFromPlayersBombNumShots = int64(in.Int64())
		case "combat_damage_from_players_combat_drone_amount":
			out.CombatDamageFromPlayersCombatDroneAmount = int64(in.Int64())
		case "combat_damage_from_players_combat_drone_num_shots":
			out.CombatDamageFromPlayersCombatDroneNumShots = int64(in.Int64())
		case "combat_damage_from_players_energy_amount":
			out.CombatDamageFromPlayersEnergyAmount = int64(in.Int64())
		case "combat_damage_from_players_energy_num_shots":
			out.CombatDamageFromPlayersEnergyNumShots = int64(in.Int64())
		case "combat_damage_from_players_fighter_bomber_amount":
			out.CombatDamageFromPlayersFighterBomberAmount = int64(in.Int64())
		case "combat_damage_from_players_fighter_bomber_num_shots":
			out.CombatDamageFromPlayersFighterBomberNumShots = int64(in.Int64())
		case "combat_damage_from_players_fighter_drone_amount":
			out.CombatDamageFromPlayersFighterDroneAmount = int64(in.Int64())
		case "combat_damage_from_players_fighter_drone_num_shots":
			out.CombatDamageFromPlayersFighterDroneNumShots = int64(in.Int64())
		case "combat_damage_from_players_hybrid_amount":
			out.CombatDamageFromPlayersHybridAmount = int64(in.Int64())
		case "combat_damage_from_players_hybrid_num_shots":
			out.CombatDamageFromPlayersHybridNumShots = int64(in.Int64())
		case "combat_damage_from_players_missile_amount":
			out.CombatDamageFromPlayersMissileAmount = int64(in.Int64())
		case "combat_damage_from_players_missile_num_shots":
			out.CombatDamageFromPlayersMissileNumShots = int64(in.Int64())
		case "combat_damage_from_players_projectile_amount":
			out.CombatDamageFromPlayersProjectileAmount = int64(in.Int64())
		case "combat_damage_from_players_projectile_num_shots":
			out.CombatDamageFromPlayersProjectileNumShots = int64(in.Int64())
		case "combat_damage_from_players_smart_bomb_amount":
			out.CombatDamageFromPlayersSmartBombAmount = int64(in.Int64())
		case "combat_damage_from_players_smart_bomb_num_shots":
			out.CombatDamageFromPlayersSmartBombNumShots = int64(in.Int64())
		case "combat_damage_from_players_super_amount":
			out.CombatDamageFromPlayersSuperAmount = int64(in.Int64())
		case "combat_damage_from_players_super_num_shots":
			out.CombatDamageFromPlayersSuperNumShots = int64(in.Int64())
		case "combat_damage_from_structures_total_amount":
			out.CombatDamageFromStructuresTotalAmount = int64(in.Int64())
		case "combat_damage_from_structures_total_num_shots":
			out.CombatDamageFromStructuresTotalNumShots = int64(in.Int64())
		case "combat_damage_to_players_bomb_amount":
			out.CombatDamageToPlayersBombAmount = int64(in.Int64())
		case "combat_damage_to_players_bomb_num_shots":
			out.CombatDamageToPlayersBombNumShots = int64(in.Int64())
		case "combat_damage_to_players_combat_drone_amount":
			out.CombatDamageToPlayersCombatDroneAmount = int64(in.Int64())
		case "combat_damage_to_players_combat_drone_num_shots":
			out.CombatDamageToPlayersCombatDroneNumShots = int64(in.Int64())
		case "combat_damage_to_players_energy_amount":
			out.CombatDamageToPlayersEnergyAmount = int64(in.Int64())
		case "combat_damage_to_players_energy_num_shots":
			out.CombatDamageToPlayersEnergyNumShots = int64(in.Int64())
		case "combat_damage_to_players_fighter_bomber_amount":
			out.CombatDamageToPlayersFighterBomberAmount = int64(in.Int64())
		case "combat_damage_to_players_fighter_bomber_num_shots":
			out.CombatDamageToPlayersFighterBomberNumShots = int64(in.Int64())
		case "combat_damage_to_players_fighter_drone_amount":
			out.CombatDamageToPlayersFighterDroneAmount = int64(in.Int64())
		case "combat_damage_to_players_fighter_drone_num_shots":
			out.CombatDamageToPlayersFighterDroneNumShots = int64(in.Int64())
		case "combat_damage_to_players_hybrid_amount":
			out.CombatDamageToPlayersHybridAmount = int64(in.Int64())
		case "combat_damage_to_players_hybrid_num_shots":
			out.CombatDamageToPlayersHybridNumShots = int64(in.Int64())
		case "combat_damage_to_players_missile_amount":
			out.CombatDamageToPlayersMissileAmount = int64(in.Int64())
		case "combat_damage_to_players_missile_num_shots":
			out.CombatDamageToPlayersMissileNumShots = int64(in.Int64())
		case "combat_damage_to_players_projectile_amount":
			out.CombatDamageToPlayersProjectileAmount = int64(in.Int64())
		case "combat_damage_to_players_projectile_num_shots":
			out.CombatDamageToPlayersProjectileNumShots = int64(in.Int64())
		case "combat_damage_to_players_smart_bomb_amount":
			out.CombatDamageToPlayersSmartBombAmount = int64(in.Int64())
		case "combat_damage_to_players_smart_bomb_num_shots":
			out.CombatDamageToPlayersSmartBombNumShots = int64(in.Int64())
		case "combat_damage_to_players_super_amount":
			out.CombatDamageToPlayersSuperAmount = int64(in.Int64())
		case "combat_damage_to_players_super_num_shots":
			out.CombatDamageToPlayersSuperNumShots = int64(in.Int64())
		case "combat_damage_to_structures_total_amount":
			out.CombatDamageToStructuresTotalAmount = int64(in.Int64())
		case "combat_damage_to_structures_total_num_shots":
			out.CombatDamageToStructuresTotalNumShots = int64(in.Int64())
		case "combat_deaths_high_sec":
			out.CombatDeathsHighSec = int64(in.Int64())
		case "combat_deaths_low_sec":
			out.CombatDeathsLowSec = int64(in.Int64())
		case "combat_deaths_null_sec":
			out.CombatDeathsNullSec = int64(in.Int64())
		case "combat_deaths_pod_high_sec":
			out.CombatDeathsPodHighSec = int64(in.Int64())
		case "combat_deaths_pod_low_sec":
			out.CombatDeathsPodLowSec = int64(in.Int64())
		case "combat_deaths_pod_null_sec":
			out.CombatDeathsPodNullSec = int64(in.Int64())
		case "combat_deaths_pod_wormhole":
			out.CombatDeathsPodWormhole = int64(in.Int64())
		case "combat_deaths_wormhole":
			out.CombatDeathsWormhole = int64(in.Int64())
		case "combat_drone_engage":
			out.CombatDroneEngage = int64(in.Int64())
		case "combat_duel_requested":
			out.CombatDuelRequested = int64(in.Int64())
		case "combat_engagement_register":
			out.CombatEngagementRegister = int64(in.Int64())
		case "combat_kills_assists":
			out.CombatKillsAssists = int64(in.Int64())
		case "combat_kills_high_sec":
			out.CombatKillsHighSec = int64(in.Int64())
		case "combat_kills_low_sec":
			out.CombatKillsLowSec = int64(in.Int64())
		case "combat_kills_null_sec":
			out.CombatKillsNullSec = int64(in.Int64())
		case "combat_kills_pod_high_sec":
			out.CombatKillsPodHighSec = int64(in.Int64())
		case "combat_kills_pod_low_sec":
			out.CombatKillsPodLowSec = int64(in.Int64())
		case "combat_kills_pod_null_sec":
			out.CombatKillsPodNullSec = int64(in.Int64())
		case "combat_kills_pod_wormhole":
			out.CombatKillsPodWormhole = int64(in.Int64())
		case "combat_kills_wormhole":
			out.CombatKillsWormhole = int64(in.Int64())
		case "combat_npc_flag_set":
			out.CombatNpcFlagSet = int64(in.Int64())
		case "combat_pvp_flag_set":
			out.CombatPvpFlagSet = int64(in.Int64())
		case "combat_repair_armor_by_remote_amount":
			out.CombatRepairArmorByRemoteAmount = int64(in.Int64())
		case "combat_repair_armor_remote_amount":
			out.CombatRepairArmorRemoteAmount = int64(in.Int64())
		case "combat_repair_armor_self_amount":
			out.CombatRepairArmorSelfAmount = int64(in.Int64())
		case "combat_repair_capacitor_by_remote_amount":
			out.CombatRepairCapacitorByRemoteAmount = int64(in.Int64())
		case "combat_repair_capacitor_remote_amount":
			out.CombatRepairCapacitorRemoteAmount = int64(in.Int64())
		case "combat_repair_capacitor_self_amount":
			out.CombatRepairCapacitorSelfAmount = int64(in.Int64())
		case "combat_repair_hull_by_remote_amount":
			out.CombatRepairHullByRemoteAmount = int64(in.Int64())
		case "combat_repair_hull_remote_amount":
			out.CombatRepairHullRemoteAmount = int64(in.Int64())
		case "combat_repair_hull_self_amount":
			out.CombatRepairHullSelfAmount = int64(in.Int64())
		case "combat_repair_shield_by_remote_amount":
			out.CombatRepairShieldByRemoteAmount = int64(in.Int64())
		case "combat_repair_shield_remote_amount":
			out.CombatRepairShieldRemoteAmount = int64(in.Int64())
		case "combat_repair_shield_self_amount":
			out.CombatRepairShieldSelfAmount = int64(in.Int64())
		case "combat_self_destructs":
			out.CombatSelfDestructs = int64(in.Int64())
		case "combat_warp_scramble_pc":
			out.CombatWarpScramblePc = int64(in.Int64())
		case "combat_warp_scrambledby_npc":
			out.CombatWarpScrambledbyNpc = int64(in.Int64())
		case "combat_warp_scrambledby_pc":
			out.CombatWarpScrambledbyPc = int64(in.Int64())
		case "combat_weapon_flag_set":
			out.CombatWeaponFlagSet = int64(in.Int64())
		case "combat_webifiedby_npc":
			out.CombatWebifiedbyNpc = int64(in.Int64())
		case "combat_webifiedby_pc":
			out.CombatWebifiedbyPc = int64(in.Int64())
		case "combat_webifying_pc":
			out.CombatWebifyingPc = int64(in.Int64())
		case "days_of_activity":
			out.DaysOfActivity = int64(in.Int64())
		case "generic_cone_scans":
			out.GenericConeScans = int64(in.Int64())
		case "generic_request_scans":
			out.GenericRequestScans = int64(in.Int64())
		case "industry_hacking_successes":
			out.IndustryHackingSuccesses = int64(in.Int64())
		case "industry_jobs_cancelled":
			out.IndustryJobsCancelled = int64(in.Int64())
		case "industry_jobs_completed_copy_blueprint":
			out.IndustryJobsCompletedCopyBlueprint = int64(in.Int64())
		case "industry_jobs_completed_invention":
			out.IndustryJobsCompletedInvention = int64(in.Int64())
		case "industry_jobs_completed_manufacture":
			out.IndustryJobsCompletedManufacture = int64(in.Int64())
		case "industry_jobs_completed_manufacture_asteroid":
			out.IndustryJobsCompletedManufactureAsteroid = int64(in.Int64())
		case "industry_jobs_completed_manufacture_asteroid_quantity":
			out.IndustryJobsCompletedManufactureAsteroidQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_charge":
			out.IndustryJobsCompletedManufactureCharge = int64(in.Int64())
		case "industry_jobs_completed_manufacture_charge_quantity":
			out.IndustryJobsCompletedManufactureChargeQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_commodity":
			out.IndustryJobsCompletedManufactureCommodity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_commodity_quantity":
			out.IndustryJobsCompletedManufactureCommodityQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_deployable":
			out.IndustryJobsCompletedManufactureDeployable = int64(in.Int64())
		case "industry_jobs_completed_manufacture_deployable_quantity":
			out.IndustryJobsCompletedManufactureDeployableQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_drone":
			out.IndustryJobsCompletedManufactureDrone = int64(in.Int64())
		case "industry_jobs_completed_manufacture_drone_quantity":
			out.IndustryJobsCompletedManufactureDroneQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_implant":
			out.IndustryJobsCompletedManufactureImplant = int64(in.Int64())
		case "industry_jobs_completed_manufacture_implant_quantity":
			out.IndustryJobsCompletedManufactureImplantQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_module":
			out.IndustryJobsCompletedManufactureModule = int64(in.Int64())
		case "industry_jobs_completed_manufacture_module_quantity":
			out.IndustryJobsCompletedManufactureModuleQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_other":
			out.IndustryJobsCompletedManufactureOther = int64(in.Int64())
		case "industry_jobs_completed_manufacture_other_quantity":
			out.IndustryJobsCompletedManufactureOtherQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_ship":
			out.IndustryJobsCompletedManufactureShip = int64(in.Int64())
		case "industry_jobs_completed_manufacture_ship_quantity":
			out.IndustryJobsCompletedManufactureShipQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_structure":
			out.IndustryJobsCompletedManufactureStructure = int64(in.Int64())
		case "industry_jobs_completed_manufacture_structure_quantity":
			out.IndustryJobsCompletedManufactureStructureQuantity = int64(in.Int64())
		case "industry_jobs_completed_manufacture_subsystem":
			out.IndustryJobsCompletedManufactureSubsystem = int64(in.Int64())
		case "industry_jobs_completed_manufacture_subsystem_quantity":
			out.IndustryJobsCompletedManufactureSubsystemQuantity = int64(in.Int64())
		case "industry_jobs_completed_material_productivity":
			out.IndustryJobsCompletedMaterialProductivity = int64(in.Int64())
		case "industry_jobs_completed_time_productivity":
			out.IndustryJobsCompletedTimeProductivity = int64(in.Int64())
		case "industry_jobs_started_copy_blueprint":
			out.IndustryJobsStartedCopyBlueprint = int64(in.Int64())
		case "industry_jobs_started_invention":
			out.IndustryJobsStartedInvention = int64(in.Int64())
		case "industry_jobs_started_manufacture":
			out.IndustryJobsStartedManufacture = int64(in.Int64())
		case "industry_jobs_started_material_productivity":
			out.IndustryJobsStartedMaterialProductivity = int64(in.Int64())
		case "industry_jobs_started_time_productivity":
			out.IndustryJobsStartedTimeProductivity = int64(in.Int64())
		case "industry_reprocess_item":
			out.IndustryReprocessItem = int64(in.Int64())
		case "industry_reprocess_item_quantity":
			out.IndustryReprocessItemQuantity = int64(in.Int64())
		case "inventory_abandon_loot_quantity":
			out.InventoryAbandonLootQuantity = int64(in.Int64())
		case "inventory_trash_item_quantity":
			out.InventoryTrashItemQuantity = int64(in.Int64())
		case "isk_in":
			out.IskIn = int64(in.Int64())
		case "isk_out":
			out.IskOut = int64(in.Int64())
		case "market_accept_contracts_courier":
			out.MarketAcceptContractsCourier = int64(in.Int64())
		case "market_accept_contracts_item_exchange":
			out.MarketAcceptContractsItemExchange = int64(in.Int64())
		case "market_buy_orders_placed":
			out.MarketBuyOrdersPlaced = int64(in.Int64())
		case "market_cancel_market_order":
			out.MarketCancelMarketOrder = int64(in.Int64())
		case "market_create_contracts_auction":
			out.MarketCreateContractsAuction = int64(in.Int64())
		case "market_create_contracts_courier":
			out.MarketCreateContractsCourier = int64(in.Int64())
		case "market_create_contracts_item_exchange":
			out.MarketCreateContractsItemExchange = int64(in.Int64())
		case "market_deliver_courier_contract":
			out.MarketDeliverCourierContract = int64(in.Int64())
		case "market_isk_gained":
			out.MarketIskGained = int64(in.Int64())
		case "market_isk_spent":
			out.MarketIskSpent = int64(in.Int64())
		case "market_modify_market_order":
			out.MarketModifyMarketOrder = int64(in.Int64())
		case "market_search_contracts":
			out.MarketSearchContracts = int64(in.Int64())
		case "market_sell_orders_placed":
			out.MarketSellOrdersPlaced = int64(in.Int64())
		case "mining_drone_mine":
			out.MiningDroneMine = int64(in.Int64())
		case "mining_ore_arkonor":
			out.MiningOreArkonor = int64(in.Int64())
		case "mining_ore_bistot":
			out.MiningOreBistot = int64(in.Int64())
		case "mining_ore_crokite":
			out.MiningOreCrokite = int64(in.Int64())
		case "mining_ore_dark_ochre":
			out.MiningOreDarkOchre = int64(in.Int64())
		case "mining_ore_gneiss":
			out.MiningOreGneiss = int64(in.Int64())
		case "mining_ore_harvestable_cloud":
			out.MiningOreHarvestableCloud = int64(in.Int64())
		case "mining_ore_hedbergite":
			out.MiningOreHedbergite = int64(in.Int64())
		case "mining_ore_hemorphite":
			out.MiningOreHemorphite = int64(in.Int64())
		case "mining_ore_ice":
			out.MiningOreIce = int64(in.Int64())
		case "mining_ore_jaspet":
			out.MiningOreJaspet = int64(in.Int64())
		case "mining_ore_kernite":
			out.MiningOreKernite = int64(in.Int64())
		case "mining_ore_mercoxit":
			out.MiningOreMercoxit = int64(in.Int64())
		case "mining_ore_omber":
			out.MiningOreOmber = int64(in.Int64())
		case "mining_ore_plagioclase":
			out.MiningOrePlagioclase = int64(in.Int64())
		case "mining_ore_pyroxeres":
			out.MiningOrePyroxeres = int64(in.Int64())
		case "mining_ore_scordite":
			out.MiningOreScordite = int64(in.Int64())
		case "mining_ore_spodumain":
			out.MiningOreSpodumain = int64(in.Int64())
		case "mining_ore_veldspar":
			out.MiningOreVeldspar = int64(in.Int64())
		case "module_activations_armor_hardener":
			out.ModuleActivationsArmorHardener = int64(in.Int64())
		case "module_activations_armor_repair_unit":
			out.ModuleActivationsArmorRepairUnit = int64(in.Int64())
		case "module_activations_armor_resistance_shift_hardener":
			out.ModuleActivationsArmorResistanceShiftHardener = int64(in.Int64())
		case "module_activations_automated_targeting_system":
			out.ModuleActivationsAutomatedTargetingSystem = int64(in.Int64())
		case "module_activations_bastion":
			out.ModuleActivationsBastion = int64(in.Int64())
		case "module_activations_bomb_launcher":
			out.ModuleActivationsBombLauncher = int64(in.Int64())
		case "module_activations_capacitor_booster":
			out.ModuleActivationsCapacitorBooster = int64(in.Int64())
		case "module_activations_cargo_scanner":
			out.ModuleActivationsCargoScanner = int64(in.Int64())
		case "module_activations_cloaking_device":
			out.ModuleActivationsCloakingDevice = int64(in.Int64())
		case "module_activations_clone_vat_bay":
			out.ModuleActivationsCloneVatBay = int64(in.Int64())
		case "module_activations_cynosural_field":
			out.ModuleActivationsCynosuralField = int64(in.Int64())
		case "module_activations_damage_control":
			out.ModuleActivationsDamageControl = int64(in.Int64())
		case "module_activations_data_miners":
			out.ModuleActivationsDataMiners = int64(in.Int64())
		case "module_activations_drone_control_unit":
			out.ModuleActivationsDroneControlUnit = int64(in.Int64())
		case "module_activations_drone_tracking_modules":
			out.ModuleActivationsDroneTrackingModules = int64(in.Int64())
		case "module_activations_eccm":
			out.ModuleActivationsEccm = int64(in.Int64())
		case "module_activations_ecm":
			out.ModuleActivationsEcm = int64(in.Int64())
		case "module_activations_ecm_burst":
			out.ModuleActivationsEcmBurst = int64(in.Int64())
		case "module_activations_energy_destabilizer":
			out.ModuleActivationsEnergyDestabilizer = int64(in.Int64())
		case "module_activations_energy_vampire":
			out.ModuleActivationsEnergyVampire = int64(in.Int64())
		case "module_activations_energy_weapon":
			out.ModuleActivationsEnergyWeapon = int64(in.Int64())
		case "module_activations_festival_launcher":
			out.ModuleActivationsFestivalLauncher = int64(in.Int64())
		case "module_activations_frequency_mining_laser":
			out.ModuleActivationsFrequencyMiningLaser = int64(in.Int64())
		case "module_activations_fueled_armor_repairer":
			out.ModuleActivationsFueledArmorRepairer = int64(in.Int64())
		case "module_activations_fueled_shield_booster":
			out.ModuleActivationsFueledShieldBooster = int64(in.Int64())
		case "module_activations_gang_coordinator":
			out.ModuleActivationsGangCoordinator = int64(in.Int64())
		case "module_activations_gas_cloud_harvester":
			out.ModuleActivationsGasCloudHarvester = int64(in.Int64())
		case "module_activations_hull_repair_unit":
			out.ModuleActivationsHullRepairUnit = int64(in.Int64())
		case "module_activations_hybrid_weapon":
			out.ModuleActivationsHybridWeapon = int64(in.Int64())
		case "module_activations_industrial_core":
			out.ModuleActivationsIndustrialCore = int64(in.Int64())
		case "module_activations_interdiction_sphere_launcher":
			out.ModuleActivationsInterdictionSphereLauncher = int64(in.Int64())
		case "module_activations_micro_jump_drive":
			out.ModuleActivationsMicroJumpDrive = int64(in.Int64())
		case "module_activations_mining_laser":
			out.ModuleActivationsMiningLaser = int64(in.Int64())
		case "module_activations_missile_launcher":
			out.ModuleActivationsMissileLauncher = int64(in.Int64())
		case "module_activations_passive_targeting_system":
			out.ModuleActivationsPassiveTargetingSystem = int64(in.Int64())
		case "module_activations_probe_launcher":
			out.ModuleActivationsProbeLauncher = int64(in.Int64())
		case "module_activations_projected_eccm":
			out.ModuleActivationsProjectedEccm = int64(in.Int64())
		case "module_activations_projectile_weapon":
			out.ModuleActivationsProjectileWeapon = int64(in.Int64())
		case "module_activations_propulsion_module":
			out.ModuleActivationsPropulsionModule = int64(in.Int64())
		case "module_activations_remote_armor_repairer":
			out.ModuleActivationsRemoteArmorRepairer = int64(in.Int64())
		case "module_activations_remote_capacitor_transmitter":
			out.ModuleActivationsRemoteCapacitorTransmitter = int64(in.Int64())
		case "module_activations_remote_ecm_burst":
			out.ModuleActivationsRemoteEcmBurst = int64(in.Int64())
		case "module_activations_remote_hull_repairer":
			out.ModuleActivationsRemoteHullRepairer = int64(in.Int64())
		case "module_activations_remote_sensor_booster":
			out.ModuleActivationsRemoteSensorBooster = int64(in.Int64())
		case "module_activations_remote_sensor_damper":
			out.ModuleActivationsRemoteSensorDamper = int64(in.Int64())
		case "module_activations_remote_shield_booster":
			out.ModuleActivationsRemoteShieldBooster = int64(in.Int64())
		case "module_activations_remote_tracking_computer":
			out.ModuleActivationsRemoteTrackingComputer = int64(in.Int64())
		case "module_activations_salvager":
			out.ModuleActivationsSalvager = int64(in.Int64())
		case "module_activations_sensor_booster":
			out.ModuleActivationsSensorBooster = int64(in.Int64())
		case "module_activations_shield_booster":
			out.ModuleActivationsShieldBooster = int64(in.Int64())
		case "module_activations_shield_hardener":
			out.ModuleActivationsShieldHardener = int64(in.Int64())
		case "module_activations_ship_scanner":
			out.ModuleActivationsShipScanner = int64(in.Int64())
		case "module_activations_siege":
			out.ModuleActivationsSiege = int64(in.Int64())
		case "module_activations_smart_bomb":
			out.ModuleActivationsSmartBomb = int64(in.Int64())
		case "module_activations_stasis_web":
			out.ModuleActivationsStasisWeb = int64(in.Int64())
		case "module_activations_strip_miner":
			out.ModuleActivationsStripMiner = int64(in.Int64())
		case "module_activations_super_weapon":
			out.ModuleActivationsSuperWeapon = int64(in.Int64())
		case "module_activations_survey_scanner":
			out.ModuleActivationsSurveyScanner = int64(in.Int64())
		case "module_activations_target_breaker":
			out.ModuleActivationsTargetBreaker = int64(in.Int64())
		case "module_activations_target_painter":
			out.ModuleActivationsTargetPainter = int64(in.Int64())
		case "module_activations_tracking_computer":
			out.ModuleActivationsTrackingComputer = int64(in.Int64())
		case "module_activations_tracking_disruptor":
			out.ModuleActivationsTrackingDisruptor = int64(in.Int64())
		case "module_activations_tractor_beam":
			out.ModuleActivationsTractorBeam = int64(in.Int64())
		case "module_activations_triage":
			out.ModuleActivationsTriage = int64(in.Int64())
		case "module_activations_warp_disrupt_field_generator":
			out.ModuleActivationsWarpDisruptFieldGenerator = int64(in.Int64())
		case "module_activations_warp_scrambler":
			out.ModuleActivationsWarpScrambler = int64(in.Int64())
		case "module_link_weapons":
			out.ModuleLinkWeapons = int64(in.Int64())
		case "module_overload":
			out.ModuleOverload = int64(in.Int64())
		case "module_repairs":
			out.ModuleRepairs = int64(in.Int64())
		case "orbital_strike_characters_killed":
			out.OrbitalStrikeCharactersKilled = int64(in.Int64())
		case "orbital_strike_damage_to_players_armor_amount":
			out.OrbitalStrikeDamageToPlayersArmorAmount = int64(in.Int64())
		case "orbital_strike_damage_to_players_shield_amount":
			out.OrbitalStrikeDamageToPlayersShieldAmount = int64(in.Int64())
		case "pve_dungeons_completed_agent":
			out.PveDungeonsCompletedAgent = int64(in.Int64())
		case "pve_dungeons_completed_distribution":
			out.PveDungeonsCompletedDistribution = int64(in.Int64())
		case "pve_missions_succeeded":
			out.PveMissionsSucceeded = int64(in.Int64())
		case "pve_missions_succeeded_epic_arc":
			out.PveMissionsSucceededEpicArc = int64(in.Int64())
		case "social_add_contact_bad":
			out.SocialAddContactBad = int64(in.Int64())
		case "social_add_contact_good":
			out.SocialAddContactGood = int64(in.Int64())
		case "social_add_contact_high":
			out.SocialAddContactHigh = int64(in.Int64())
		case "social_add_contact_horrible":
			out.SocialAddContactHorrible = int64(in.Int64())
		case "social_add_contact_neutral":
			out.SocialAddContactNeutral = int64(in.Int64())
		case "social_add_note":
			out.SocialAddNote = int64(in.Int64())
		case "social_added_as_contact_bad":
			out.SocialAddedAsContactBad = int64(in.Int64())
		case "social_added_as_contact_good":
			out.SocialAddedAsContactGood = int64(in.Int64())
		case "social_added_as_contact_high":
			out.SocialAddedAsContactHigh = int64(in.Int64())
		case "social_added_as_contact_horrible":
			out.SocialAddedAsContactHorrible = int64(in.Int64())
		case "social_added_as_contact_neutral":
			out.SocialAddedAsContactNeutral = int64(in.Int64())
		case "social_calendar_event_created":
			out.SocialCalendarEventCreated = int64(in.Int64())
		case "social_chat_messages_alliance":
			out.SocialChatMessagesAlliance = int64(in.Int64())
		case "social_chat_messages_constellation":
			out.SocialChatMessagesConstellation = int64(in.Int64())
		case "social_chat_messages_corporation":
			out.SocialChatMessagesCorporation = int64(in.Int64())
		case "social_chat_messages_fleet":
			out.SocialChatMessagesFleet = int64(in.Int64())
		case "social_chat_messages_region":
			out.SocialChatMessagesRegion = int64(in.Int64())
		case "social_chat_messages_solarsystem":
			out.SocialChatMessagesSolarsystem = int64(in.Int64())
		case "social_chat_messages_warfaction":
			out.SocialChatMessagesWarfaction = int64(in.Int64())
		case "social_chat_total_message_length":
			out.SocialChatTotalMessageLength = int64(in.Int64())
		case "social_direct_trades":
			out.SocialDirectTrades = int64(in.Int64())
		case "social_fleet_broadcasts":
			out.SocialFleetBroadcasts = int64(in.Int64())
		case "social_fleet_joins":
			out.SocialFleetJoins = int64(in.Int64())
		case "social_mails_received":
			out.SocialMailsReceived = int64(in.Int64())
		case "social_mails_sent":
			out.SocialMailsSent = int64(in.Int64())
		case "travel_acceleration_gate_activations":
			out.TravelAccelerationGateActivations = int64(in.Int64())
		case "travel_align_to":
			out.TravelAlignTo = int64(in.Int64())
		case "travel_distance_warped_high_sec":
			out.TravelDistanceWarpedHighSec = int64(in.Int64())
		case "travel_distance_warped_low_sec":
			out.TravelDistanceWarpedLowSec = int64(in.Int64())
		case "travel_distance_warped_null_sec":
			out.TravelDistanceWarpedNullSec = int64(in.Int64())
		case "travel_distance_warped_wormhole":
			out.TravelDistanceWarpedWormhole = int64(in.Int64())
		case "travel_docks_high_sec":
			out.TravelDocksHighSec = int64(in.Int64())
		case "travel_docks_low_sec":
			out.TravelDocksLowSec = int64(in.Int64())
		case "travel_docks_null_sec":
			out.TravelDocksNullSec = int64(in.Int64())
		case "travel_jumps_stargate_high_sec":
			out.TravelJumpsStargateHighSec = int64(in.Int64())
		case "travel_jumps_stargate_low_sec":
			out.TravelJumpsStargateLowSec = int64(in.Int64())
		case "travel_jumps_stargate_null_sec":
			out.TravelJumpsStargateNullSec = int64(in.Int64())
		case "travel_jumps_wormhole":
			out.TravelJumpsWormhole = int64(in.Int64())
		case "travel_warps_high_sec":
			out.TravelWarpsHighSec = int64(in.Int64())
		case "travel_warps_low_sec":
			out.TravelWarpsLowSec = int64(in.Int64())
		case "travel_warps_null_sec":
			out.TravelWarpsNullSec = int64(in.Int64())
		case "travel_warps_to_bookmark":
			out.TravelWarpsToBookmark = int64(in.Int64())
		case "travel_warps_to_celestial":
			out.TravelWarpsToCelestial = int64(in.Int64())
		case "travel_warps_to_fleet_member":
			out.TravelWarpsToFleetMember = int64(in.Int64())
		case "travel_warps_to_scan_result":
			out.TravelWarpsToScanResult = int64(in.Int64())
		case "travel_warps_wormhole":
			out.TravelWarpsWormhole = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi1(out *jwriter.Writer, in GetCharactersCharacterIdStats200Ok) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Year != 0 {
		const prefix string = ",\"year\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int32(int32(in.Year))
	}
	if in.CharacterMinutes != 0 {
		const prefix string = ",\"character_minutes\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CharacterMinutes))
	}
	if in.CharacterSessionsStarted != 0 {
		const prefix string = ",\"character_sessions_started\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CharacterSessionsStarted))
	}
	if in.CombatCapDrainedbyNpc != 0 {
		const prefix string = ",\"combat_cap_drainedby_npc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatCapDrainedbyNpc))
	}
	if in.CombatCapDrainedbyPc != 0 {
		const prefix string = ",\"combat_cap_drainedby_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatCapDrainedbyPc))
	}
	if in.CombatCapDrainingPc != 0 {
		const prefix string = ",\"combat_cap_draining_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatCapDrainingPc))
	}
	if in.CombatCriminalFlagSet != 0 {
		const prefix string = ",\"combat_criminal_flag_set\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatCriminalFlagSet))
	}
	if in.CombatDamageFromNpCsAmount != 0 {
		const prefix string = ",\"combat_damage_from_np_cs_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromNpCsAmount))
	}
	if in.CombatDamageFromNpCsNumShots != 0 {
		const prefix string = ",\"combat_damage_from_np_cs_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromNpCsNumShots))
	}
	if in.CombatDamageFromPlayersBombAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_bomb_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersBombAmount))
	}
	if in.CombatDamageFromPlayersBombNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_bomb_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersBombNumShots))
	}
	if in.CombatDamageFromPlayersCombatDroneAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_combat_drone_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersCombatDroneAmount))
	}
	if in.CombatDamageFromPlayersCombatDroneNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_combat_drone_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersCombatDroneNumShots))
	}
	if in.CombatDamageFromPlayersEnergyAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_energy_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersEnergyAmount))
	}
	if in.CombatDamageFromPlayersEnergyNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_energy_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersEnergyNumShots))
	}
	if in.CombatDamageFromPlayersFighterBomberAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_fighter_bomber_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersFighterBomberAmount))
	}
	if in.CombatDamageFromPlayersFighterBomberNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_fighter_bomber_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersFighterBomberNumShots))
	}
	if in.CombatDamageFromPlayersFighterDroneAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_fighter_drone_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersFighterDroneAmount))
	}
	if in.CombatDamageFromPlayersFighterDroneNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_fighter_drone_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersFighterDroneNumShots))
	}
	if in.CombatDamageFromPlayersHybridAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_hybrid_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersHybridAmount))
	}
	if in.CombatDamageFromPlayersHybridNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_hybrid_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersHybridNumShots))
	}
	if in.CombatDamageFromPlayersMissileAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_missile_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersMissileAmount))
	}
	if in.CombatDamageFromPlayersMissileNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_missile_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersMissileNumShots))
	}
	if in.CombatDamageFromPlayersProjectileAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_projectile_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersProjectileAmount))
	}
	if in.CombatDamageFromPlayersProjectileNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_projectile_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersProjectileNumShots))
	}
	if in.CombatDamageFromPlayersSmartBombAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_smart_bomb_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersSmartBombAmount))
	}
	if in.CombatDamageFromPlayersSmartBombNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_smart_bomb_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersSmartBombNumShots))
	}
	if in.CombatDamageFromPlayersSuperAmount != 0 {
		const prefix string = ",\"combat_damage_from_players_super_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersSuperAmount))
	}
	if in.CombatDamageFromPlayersSuperNumShots != 0 {
		const prefix string = ",\"combat_damage_from_players_super_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromPlayersSuperNumShots))
	}
	if in.CombatDamageFromStructuresTotalAmount != 0 {
		const prefix string = ",\"combat_damage_from_structures_total_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromStructuresTotalAmount))
	}
	if in.CombatDamageFromStructuresTotalNumShots != 0 {
		const prefix string = ",\"combat_damage_from_structures_total_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageFromStructuresTotalNumShots))
	}
	if in.CombatDamageToPlayersBombAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_bomb_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersBombAmount))
	}
	if in.CombatDamageToPlayersBombNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_bomb_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersBombNumShots))
	}
	if in.CombatDamageToPlayersCombatDroneAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_combat_drone_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersCombatDroneAmount))
	}
	if in.CombatDamageToPlayersCombatDroneNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_combat_drone_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersCombatDroneNumShots))
	}
	if in.CombatDamageToPlayersEnergyAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_energy_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersEnergyAmount))
	}
	if in.CombatDamageToPlayersEnergyNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_energy_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersEnergyNumShots))
	}
	if in.CombatDamageToPlayersFighterBomberAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_fighter_bomber_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersFighterBomberAmount))
	}
	if in.CombatDamageToPlayersFighterBomberNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_fighter_bomber_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersFighterBomberNumShots))
	}
	if in.CombatDamageToPlayersFighterDroneAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_fighter_drone_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersFighterDroneAmount))
	}
	if in.CombatDamageToPlayersFighterDroneNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_fighter_drone_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersFighterDroneNumShots))
	}
	if in.CombatDamageToPlayersHybridAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_hybrid_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersHybridAmount))
	}
	if in.CombatDamageToPlayersHybridNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_hybrid_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersHybridNumShots))
	}
	if in.CombatDamageToPlayersMissileAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_missile_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersMissileAmount))
	}
	if in.CombatDamageToPlayersMissileNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_missile_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersMissileNumShots))
	}
	if in.CombatDamageToPlayersProjectileAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_projectile_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersProjectileAmount))
	}
	if in.CombatDamageToPlayersProjectileNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_projectile_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersProjectileNumShots))
	}
	if in.CombatDamageToPlayersSmartBombAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_smart_bomb_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersSmartBombAmount))
	}
	if in.CombatDamageToPlayersSmartBombNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_smart_bomb_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersSmartBombNumShots))
	}
	if in.CombatDamageToPlayersSuperAmount != 0 {
		const prefix string = ",\"combat_damage_to_players_super_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersSuperAmount))
	}
	if in.CombatDamageToPlayersSuperNumShots != 0 {
		const prefix string = ",\"combat_damage_to_players_super_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToPlayersSuperNumShots))
	}
	if in.CombatDamageToStructuresTotalAmount != 0 {
		const prefix string = ",\"combat_damage_to_structures_total_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToStructuresTotalAmount))
	}
	if in.CombatDamageToStructuresTotalNumShots != 0 {
		const prefix string = ",\"combat_damage_to_structures_total_num_shots\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDamageToStructuresTotalNumShots))
	}
	if in.CombatDeathsHighSec != 0 {
		const prefix string = ",\"combat_deaths_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsHighSec))
	}
	if in.CombatDeathsLowSec != 0 {
		const prefix string = ",\"combat_deaths_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsLowSec))
	}
	if in.CombatDeathsNullSec != 0 {
		const prefix string = ",\"combat_deaths_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsNullSec))
	}
	if in.CombatDeathsPodHighSec != 0 {
		const prefix string = ",\"combat_deaths_pod_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsPodHighSec))
	}
	if in.CombatDeathsPodLowSec != 0 {
		const prefix string = ",\"combat_deaths_pod_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsPodLowSec))
	}
	if in.CombatDeathsPodNullSec != 0 {
		const prefix string = ",\"combat_deaths_pod_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsPodNullSec))
	}
	if in.CombatDeathsPodWormhole != 0 {
		const prefix string = ",\"combat_deaths_pod_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsPodWormhole))
	}
	if in.CombatDeathsWormhole != 0 {
		const prefix string = ",\"combat_deaths_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDeathsWormhole))
	}
	if in.CombatDroneEngage != 0 {
		const prefix string = ",\"combat_drone_engage\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDroneEngage))
	}
	if in.CombatDuelRequested != 0 {
		const prefix string = ",\"combat_duel_requested\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatDuelRequested))
	}
	if in.CombatEngagementRegister != 0 {
		const prefix string = ",\"combat_engagement_register\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatEngagementRegister))
	}
	if in.CombatKillsAssists != 0 {
		const prefix string = ",\"combat_kills_assists\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsAssists))
	}
	if in.CombatKillsHighSec != 0 {
		const prefix string = ",\"combat_kills_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsHighSec))
	}
	if in.CombatKillsLowSec != 0 {
		const prefix string = ",\"combat_kills_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsLowSec))
	}
	if in.CombatKillsNullSec != 0 {
		const prefix string = ",\"combat_kills_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsNullSec))
	}
	if in.CombatKillsPodHighSec != 0 {
		const prefix string = ",\"combat_kills_pod_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsPodHighSec))
	}
	if in.CombatKillsPodLowSec != 0 {
		const prefix string = ",\"combat_kills_pod_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsPodLowSec))
	}
	if in.CombatKillsPodNullSec != 0 {
		const prefix string = ",\"combat_kills_pod_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsPodNullSec))
	}
	if in.CombatKillsPodWormhole != 0 {
		const prefix string = ",\"combat_kills_pod_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsPodWormhole))
	}
	if in.CombatKillsWormhole != 0 {
		const prefix string = ",\"combat_kills_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatKillsWormhole))
	}
	if in.CombatNpcFlagSet != 0 {
		const prefix string = ",\"combat_npc_flag_set\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatNpcFlagSet))
	}
	if in.CombatPvpFlagSet != 0 {
		const prefix string = ",\"combat_pvp_flag_set\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatPvpFlagSet))
	}
	if in.CombatRepairArmorByRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_armor_by_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairArmorByRemoteAmount))
	}
	if in.CombatRepairArmorRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_armor_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairArmorRemoteAmount))
	}
	if in.CombatRepairArmorSelfAmount != 0 {
		const prefix string = ",\"combat_repair_armor_self_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairArmorSelfAmount))
	}
	if in.CombatRepairCapacitorByRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_capacitor_by_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairCapacitorByRemoteAmount))
	}
	if in.CombatRepairCapacitorRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_capacitor_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairCapacitorRemoteAmount))
	}
	if in.CombatRepairCapacitorSelfAmount != 0 {
		const prefix string = ",\"combat_repair_capacitor_self_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairCapacitorSelfAmount))
	}
	if in.CombatRepairHullByRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_hull_by_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairHullByRemoteAmount))
	}
	if in.CombatRepairHullRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_hull_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairHullRemoteAmount))
	}
	if in.CombatRepairHullSelfAmount != 0 {
		const prefix string = ",\"combat_repair_hull_self_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairHullSelfAmount))
	}
	if in.CombatRepairShieldByRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_shield_by_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairShieldByRemoteAmount))
	}
	if in.CombatRepairShieldRemoteAmount != 0 {
		const prefix string = ",\"combat_repair_shield_remote_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairShieldRemoteAmount))
	}
	if in.CombatRepairShieldSelfAmount != 0 {
		const prefix string = ",\"combat_repair_shield_self_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatRepairShieldSelfAmount))
	}
	if in.CombatSelfDestructs != 0 {
		const prefix string = ",\"combat_self_destructs\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatSelfDestructs))
	}
	if in.CombatWarpScramblePc != 0 {
		const prefix string = ",\"combat_warp_scramble_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWarpScramblePc))
	}
	if in.CombatWarpScrambledbyNpc != 0 {
		const prefix string = ",\"combat_warp_scrambledby_npc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWarpScrambledbyNpc))
	}
	if in.CombatWarpScrambledbyPc != 0 {
		const prefix string = ",\"combat_warp_scrambledby_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWarpScrambledbyPc))
	}
	if in.CombatWeaponFlagSet != 0 {
		const prefix string = ",\"combat_weapon_flag_set\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWeaponFlagSet))
	}
	if in.CombatWebifiedbyNpc != 0 {
		const prefix string = ",\"combat_webifiedby_npc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWebifiedbyNpc))
	}
	if in.CombatWebifiedbyPc != 0 {
		const prefix string = ",\"combat_webifiedby_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWebifiedbyPc))
	}
	if in.CombatWebifyingPc != 0 {
		const prefix string = ",\"combat_webifying_pc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.CombatWebifyingPc))
	}
	if in.DaysOfActivity != 0 {
		const prefix string = ",\"days_of_activity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.DaysOfActivity))
	}
	if in.GenericConeScans != 0 {
		const prefix string = ",\"generic_cone_scans\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.GenericConeScans))
	}
	if in.GenericRequestScans != 0 {
		const prefix string = ",\"generic_request_scans\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.GenericRequestScans))
	}
	if in.IndustryHackingSuccesses != 0 {
		const prefix string = ",\"industry_hacking_successes\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryHackingSuccesses))
	}
	if in.IndustryJobsCancelled != 0 {
		const prefix string = ",\"industry_jobs_cancelled\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCancelled))
	}
	if in.IndustryJobsCompletedCopyBlueprint != 0 {
		const prefix string = ",\"industry_jobs_completed_copy_blueprint\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedCopyBlueprint))
	}
	if in.IndustryJobsCompletedInvention != 0 {
		const prefix string = ",\"industry_jobs_completed_invention\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedInvention))
	}
	if in.IndustryJobsCompletedManufacture != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufacture))
	}
	if in.IndustryJobsCompletedManufactureAsteroid != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_asteroid\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureAsteroid))
	}
	if in.IndustryJobsCompletedManufactureAsteroidQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_asteroid_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureAsteroidQuantity))
	}
	if in.IndustryJobsCompletedManufactureCharge != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_charge\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureCharge))
	}
	if in.IndustryJobsCompletedManufactureChargeQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_charge_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureChargeQuantity))
	}
	if in.IndustryJobsCompletedManufactureCommodity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_commodity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureCommodity))
	}
	if in.IndustryJobsCompletedManufactureCommodityQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_commodity_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureCommodityQuantity))
	}
	if in.IndustryJobsCompletedManufactureDeployable != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_deployable\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureDeployable))
	}
	if in.IndustryJobsCompletedManufactureDeployableQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_deployable_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureDeployableQuantity))
	}
	if in.IndustryJobsCompletedManufactureDrone != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_drone\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureDrone))
	}
	if in.IndustryJobsCompletedManufactureDroneQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_drone_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureDroneQuantity))
	}
	if in.IndustryJobsCompletedManufactureImplant != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_implant\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureImplant))
	}
	if in.IndustryJobsCompletedManufactureImplantQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_implant_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureImplantQuantity))
	}
	if in.IndustryJobsCompletedManufactureModule != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_module\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureModule))
	}
	if in.IndustryJobsCompletedManufactureModuleQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_module_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureModuleQuantity))
	}
	if in.IndustryJobsCompletedManufactureOther != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_other\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureOther))
	}
	if in.IndustryJobsCompletedManufactureOtherQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_other_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureOtherQuantity))
	}
	if in.IndustryJobsCompletedManufactureShip != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_ship\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureShip))
	}
	if in.IndustryJobsCompletedManufactureShipQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_ship_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureShipQuantity))
	}
	if in.IndustryJobsCompletedManufactureStructure != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_structure\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureStructure))
	}
	if in.IndustryJobsCompletedManufactureStructureQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_structure_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureStructureQuantity))
	}
	if in.IndustryJobsCompletedManufactureSubsystem != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_subsystem\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureSubsystem))
	}
	if in.IndustryJobsCompletedManufactureSubsystemQuantity != 0 {
		const prefix string = ",\"industry_jobs_completed_manufacture_subsystem_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedManufactureSubsystemQuantity))
	}
	if in.IndustryJobsCompletedMaterialProductivity != 0 {
		const prefix string = ",\"industry_jobs_completed_material_productivity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedMaterialProductivity))
	}
	if in.IndustryJobsCompletedTimeProductivity != 0 {
		const prefix string = ",\"industry_jobs_completed_time_productivity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsCompletedTimeProductivity))
	}
	if in.IndustryJobsStartedCopyBlueprint != 0 {
		const prefix string = ",\"industry_jobs_started_copy_blueprint\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsStartedCopyBlueprint))
	}
	if in.IndustryJobsStartedInvention != 0 {
		const prefix string = ",\"industry_jobs_started_invention\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsStartedInvention))
	}
	if in.IndustryJobsStartedManufacture != 0 {
		const prefix string = ",\"industry_jobs_started_manufacture\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsStartedManufacture))
	}
	if in.IndustryJobsStartedMaterialProductivity != 0 {
		const prefix string = ",\"industry_jobs_started_material_productivity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsStartedMaterialProductivity))
	}
	if in.IndustryJobsStartedTimeProductivity != 0 {
		const prefix string = ",\"industry_jobs_started_time_productivity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryJobsStartedTimeProductivity))
	}
	if in.IndustryReprocessItem != 0 {
		const prefix string = ",\"industry_reprocess_item\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryReprocessItem))
	}
	if in.IndustryReprocessItemQuantity != 0 {
		const prefix string = ",\"industry_reprocess_item_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IndustryReprocessItemQuantity))
	}
	if in.InventoryAbandonLootQuantity != 0 {
		const prefix string = ",\"inventory_abandon_loot_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.InventoryAbandonLootQuantity))
	}
	if in.InventoryTrashItemQuantity != 0 {
		const prefix string = ",\"inventory_trash_item_quantity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.InventoryTrashItemQuantity))
	}
	if in.IskIn != 0 {
		const prefix string = ",\"isk_in\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IskIn))
	}
	if in.IskOut != 0 {
		const prefix string = ",\"isk_out\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.IskOut))
	}
	if in.MarketAcceptContractsCourier != 0 {
		const prefix string = ",\"market_accept_contracts_courier\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketAcceptContractsCourier))
	}
	if in.MarketAcceptContractsItemExchange != 0 {
		const prefix string = ",\"market_accept_contracts_item_exchange\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketAcceptContractsItemExchange))
	}
	if in.MarketBuyOrdersPlaced != 0 {
		const prefix string = ",\"market_buy_orders_placed\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketBuyOrdersPlaced))
	}
	if in.MarketCancelMarketOrder != 0 {
		const prefix string = ",\"market_cancel_market_order\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketCancelMarketOrder))
	}
	if in.MarketCreateContractsAuction != 0 {
		const prefix string = ",\"market_create_contracts_auction\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketCreateContractsAuction))
	}
	if in.MarketCreateContractsCourier != 0 {
		const prefix string = ",\"market_create_contracts_courier\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketCreateContractsCourier))
	}
	if in.MarketCreateContractsItemExchange != 0 {
		const prefix string = ",\"market_create_contracts_item_exchange\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketCreateContractsItemExchange))
	}
	if in.MarketDeliverCourierContract != 0 {
		const prefix string = ",\"market_deliver_courier_contract\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketDeliverCourierContract))
	}
	if in.MarketIskGained != 0 {
		const prefix string = ",\"market_isk_gained\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketIskGained))
	}
	if in.MarketIskSpent != 0 {
		const prefix string = ",\"market_isk_spent\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketIskSpent))
	}
	if in.MarketModifyMarketOrder != 0 {
		const prefix string = ",\"market_modify_market_order\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketModifyMarketOrder))
	}
	if in.MarketSearchContracts != 0 {
		const prefix string = ",\"market_search_contracts\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketSearchContracts))
	}
	if in.MarketSellOrdersPlaced != 0 {
		const prefix string = ",\"market_sell_orders_placed\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MarketSellOrdersPlaced))
	}
	if in.MiningDroneMine != 0 {
		const prefix string = ",\"mining_drone_mine\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningDroneMine))
	}
	if in.MiningOreArkonor != 0 {
		const prefix string = ",\"mining_ore_arkonor\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreArkonor))
	}
	if in.MiningOreBistot != 0 {
		const prefix string = ",\"mining_ore_bistot\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreBistot))
	}
	if in.MiningOreCrokite != 0 {
		const prefix string = ",\"mining_ore_crokite\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreCrokite))
	}
	if in.MiningOreDarkOchre != 0 {
		const prefix string = ",\"mining_ore_dark_ochre\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreDarkOchre))
	}
	if in.MiningOreGneiss != 0 {
		const prefix string = ",\"mining_ore_gneiss\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreGneiss))
	}
	if in.MiningOreHarvestableCloud != 0 {
		const prefix string = ",\"mining_ore_harvestable_cloud\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreHarvestableCloud))
	}
	if in.MiningOreHedbergite != 0 {
		const prefix string = ",\"mining_ore_hedbergite\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreHedbergite))
	}
	if in.MiningOreHemorphite != 0 {
		const prefix string = ",\"mining_ore_hemorphite\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreHemorphite))
	}
	if in.MiningOreIce != 0 {
		const prefix string = ",\"mining_ore_ice\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreIce))
	}
	if in.MiningOreJaspet != 0 {
		const prefix string = ",\"mining_ore_jaspet\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreJaspet))
	}
	if in.MiningOreKernite != 0 {
		const prefix string = ",\"mining_ore_kernite\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreKernite))
	}
	if in.MiningOreMercoxit != 0 {
		const prefix string = ",\"mining_ore_mercoxit\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreMercoxit))
	}
	if in.MiningOreOmber != 0 {
		const prefix string = ",\"mining_ore_omber\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreOmber))
	}
	if in.MiningOrePlagioclase != 0 {
		const prefix string = ",\"mining_ore_plagioclase\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOrePlagioclase))
	}
	if in.MiningOrePyroxeres != 0 {
		const prefix string = ",\"mining_ore_pyroxeres\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOrePyroxeres))
	}
	if in.MiningOreScordite != 0 {
		const prefix string = ",\"mining_ore_scordite\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreScordite))
	}
	if in.MiningOreSpodumain != 0 {
		const prefix string = ",\"mining_ore_spodumain\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreSpodumain))
	}
	if in.MiningOreVeldspar != 0 {
		const prefix string = ",\"mining_ore_veldspar\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.MiningOreVeldspar))
	}
	if in.ModuleActivationsArmorHardener != 0 {
		const prefix string = ",\"module_activations_armor_hardener\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsArmorHardener))
	}
	if in.ModuleActivationsArmorRepairUnit != 0 {
		const prefix string = ",\"module_activations_armor_repair_unit\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsArmorRepairUnit))
	}
	if in.ModuleActivationsArmorResistanceShiftHardener != 0 {
		const prefix string = ",\"module_activations_armor_resistance_shift_hardener\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsArmorResistanceShiftHardener))
	}
	if in.ModuleActivationsAutomatedTargetingSystem != 0 {
		const prefix string = ",\"module_activations_automated_targeting_system\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsAutomatedTargetingSystem))
	}
	if in.ModuleActivationsBastion != 0 {
		const prefix string = ",\"module_activations_bastion\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsBastion))
	}
	if in.ModuleActivationsBombLauncher != 0 {
		const prefix string = ",\"module_activations_bomb_launcher\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsBombLauncher))
	}
	if in.ModuleActivationsCapacitorBooster != 0 {
		const prefix string = ",\"module_activations_capacitor_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsCapacitorBooster))
	}
	if in.ModuleActivationsCargoScanner != 0 {
		const prefix string = ",\"module_activations_cargo_scanner\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsCargoScanner))
	}
	if in.ModuleActivationsCloakingDevice != 0 {
		const prefix string = ",\"module_activations_cloaking_device\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsCloakingDevice))
	}
	if in.ModuleActivationsCloneVatBay != 0 {
		const prefix string = ",\"module_activations_clone_vat_bay\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsCloneVatBay))
	}
	if in.ModuleActivationsCynosuralField != 0 {
		const prefix string = ",\"module_activations_cynosural_field\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsCynosuralField))
	}
	if in.ModuleActivationsDamageControl != 0 {
		const prefix string = ",\"module_activations_damage_control\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsDamageControl))
	}
	if in.ModuleActivationsDataMiners != 0 {
		const prefix string = ",\"module_activations_data_miners\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsDataMiners))
	}
	if in.ModuleActivationsDroneControlUnit != 0 {
		const prefix string = ",\"module_activations_drone_control_unit\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsDroneControlUnit))
	}
	if in.ModuleActivationsDroneTrackingModules != 0 {
		const prefix string = ",\"module_activations_drone_tracking_modules\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsDroneTrackingModules))
	}
	if in.ModuleActivationsEccm != 0 {
		const prefix string = ",\"module_activations_eccm\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEccm))
	}
	if in.ModuleActivationsEcm != 0 {
		const prefix string = ",\"module_activations_ecm\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEcm))
	}
	if in.ModuleActivationsEcmBurst != 0 {
		const prefix string = ",\"module_activations_ecm_burst\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEcmBurst))
	}
	if in.ModuleActivationsEnergyDestabilizer != 0 {
		const prefix string = ",\"module_activations_energy_destabilizer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEnergyDestabilizer))
	}
	if in.ModuleActivationsEnergyVampire != 0 {
		const prefix string = ",\"module_activations_energy_vampire\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEnergyVampire))
	}
	if in.ModuleActivationsEnergyWeapon != 0 {
		const prefix string = ",\"module_activations_energy_weapon\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsEnergyWeapon))
	}
	if in.ModuleActivationsFestivalLauncher != 0 {
		const prefix string = ",\"module_activations_festival_launcher\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsFestivalLauncher))
	}
	if in.ModuleActivationsFrequencyMiningLaser != 0 {
		const prefix string = ",\"module_activations_frequency_mining_laser\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsFrequencyMiningLaser))
	}
	if in.ModuleActivationsFueledArmorRepairer != 0 {
		const prefix string = ",\"module_activations_fueled_armor_repairer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsFueledArmorRepairer))
	}
	if in.ModuleActivationsFueledShieldBooster != 0 {
		const prefix string = ",\"module_activations_fueled_shield_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsFueledShieldBooster))
	}
	if in.ModuleActivationsGangCoordinator != 0 {
		const prefix string = ",\"module_activations_gang_coordinator\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsGangCoordinator))
	}
	if in.ModuleActivationsGasCloudHarvester != 0 {
		const prefix string = ",\"module_activations_gas_cloud_harvester\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsGasCloudHarvester))
	}
	if in.ModuleActivationsHullRepairUnit != 0 {
		const prefix string = ",\"module_activations_hull_repair_unit\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsHullRepairUnit))
	}
	if in.ModuleActivationsHybridWeapon != 0 {
		const prefix string = ",\"module_activations_hybrid_weapon\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsHybridWeapon))
	}
	if in.ModuleActivationsIndustrialCore != 0 {
		const prefix string = ",\"module_activations_industrial_core\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsIndustrialCore))
	}
	if in.ModuleActivationsInterdictionSphereLauncher != 0 {
		const prefix string = ",\"module_activations_interdiction_sphere_launcher\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsInterdictionSphereLauncher))
	}
	if in.ModuleActivationsMicroJumpDrive != 0 {
		const prefix string = ",\"module_activations_micro_jump_drive\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsMicroJumpDrive))
	}
	if in.ModuleActivationsMiningLaser != 0 {
		const prefix string = ",\"module_activations_mining_laser\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsMiningLaser))
	}
	if in.ModuleActivationsMissileLauncher != 0 {
		const prefix string = ",\"module_activations_missile_launcher\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsMissileLauncher))
	}
	if in.ModuleActivationsPassiveTargetingSystem != 0 {
		const prefix string = ",\"module_activations_passive_targeting_system\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsPassiveTargetingSystem))
	}
	if in.ModuleActivationsProbeLauncher != 0 {
		const prefix string = ",\"module_activations_probe_launcher\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsProbeLauncher))
	}
	if in.ModuleActivationsProjectedEccm != 0 {
		const prefix string = ",\"module_activations_projected_eccm\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsProjectedEccm))
	}
	if in.ModuleActivationsProjectileWeapon != 0 {
		const prefix string = ",\"module_activations_projectile_weapon\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsProjectileWeapon))
	}
	if in.ModuleActivationsPropulsionModule != 0 {
		const prefix string = ",\"module_activations_propulsion_module\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsPropulsionModule))
	}
	if in.ModuleActivationsRemoteArmorRepairer != 0 {
		const prefix string = ",\"module_activations_remote_armor_repairer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteArmorRepairer))
	}
	if in.ModuleActivationsRemoteCapacitorTransmitter != 0 {
		const prefix string = ",\"module_activations_remote_capacitor_transmitter\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteCapacitorTransmitter))
	}
	if in.ModuleActivationsRemoteEcmBurst != 0 {
		const prefix string = ",\"module_activations_remote_ecm_burst\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteEcmBurst))
	}
	if in.ModuleActivationsRemoteHullRepairer != 0 {
		const prefix string = ",\"module_activations_remote_hull_repairer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteHullRepairer))
	}
	if in.ModuleActivationsRemoteSensorBooster != 0 {
		const prefix string = ",\"module_activations_remote_sensor_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteSensorBooster))
	}
	if in.ModuleActivationsRemoteSensorDamper != 0 {
		const prefix string = ",\"module_activations_remote_sensor_damper\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteSensorDamper))
	}
	if in.ModuleActivationsRemoteShieldBooster != 0 {
		const prefix string = ",\"module_activations_remote_shield_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteShieldBooster))
	}
	if in.ModuleActivationsRemoteTrackingComputer != 0 {
		const prefix string = ",\"module_activations_remote_tracking_computer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsRemoteTrackingComputer))
	}
	if in.ModuleActivationsSalvager != 0 {
		const prefix string = ",\"module_activations_salvager\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSalvager))
	}
	if in.ModuleActivationsSensorBooster != 0 {
		const prefix string = ",\"module_activations_sensor_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSensorBooster))
	}
	if in.ModuleActivationsShieldBooster != 0 {
		const prefix string = ",\"module_activations_shield_booster\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsShieldBooster))
	}
	if in.ModuleActivationsShieldHardener != 0 {
		const prefix string = ",\"module_activations_shield_hardener\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsShieldHardener))
	}
	if in.ModuleActivationsShipScanner != 0 {
		const prefix string = ",\"module_activations_ship_scanner\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsShipScanner))
	}
	if in.ModuleActivationsSiege != 0 {
		const prefix string = ",\"module_activations_siege\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSiege))
	}
	if in.ModuleActivationsSmartBomb != 0 {
		const prefix string = ",\"module_activations_smart_bomb\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSmartBomb))
	}
	if in.ModuleActivationsStasisWeb != 0 {
		const prefix string = ",\"module_activations_stasis_web\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsStasisWeb))
	}
	if in.ModuleActivationsStripMiner != 0 {
		const prefix string = ",\"module_activations_strip_miner\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsStripMiner))
	}
	if in.ModuleActivationsSuperWeapon != 0 {
		const prefix string = ",\"module_activations_super_weapon\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSuperWeapon))
	}
	if in.ModuleActivationsSurveyScanner != 0 {
		const prefix string = ",\"module_activations_survey_scanner\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsSurveyScanner))
	}
	if in.ModuleActivationsTargetBreaker != 0 {
		const prefix string = ",\"module_activations_target_breaker\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTargetBreaker))
	}
	if in.ModuleActivationsTargetPainter != 0 {
		const prefix string = ",\"module_activations_target_painter\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTargetPainter))
	}
	if in.ModuleActivationsTrackingComputer != 0 {
		const prefix string = ",\"module_activations_tracking_computer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTrackingComputer))
	}
	if in.ModuleActivationsTrackingDisruptor != 0 {
		const prefix string = ",\"module_activations_tracking_disruptor\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTrackingDisruptor))
	}
	if in.ModuleActivationsTractorBeam != 0 {
		const prefix string = ",\"module_activations_tractor_beam\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTractorBeam))
	}
	if in.ModuleActivationsTriage != 0 {
		const prefix string = ",\"module_activations_triage\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsTriage))
	}
	if in.ModuleActivationsWarpDisruptFieldGenerator != 0 {
		const prefix string = ",\"module_activations_warp_disrupt_field_generator\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsWarpDisruptFieldGenerator))
	}
	if in.ModuleActivationsWarpScrambler != 0 {
		const prefix string = ",\"module_activations_warp_scrambler\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleActivationsWarpScrambler))
	}
	if in.ModuleLinkWeapons != 0 {
		const prefix string = ",\"module_link_weapons\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleLinkWeapons))
	}
	if in.ModuleOverload != 0 {
		const prefix string = ",\"module_overload\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleOverload))
	}
	if in.ModuleRepairs != 0 {
		const prefix string = ",\"module_repairs\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ModuleRepairs))
	}
	if in.OrbitalStrikeCharactersKilled != 0 {
		const prefix string = ",\"orbital_strike_characters_killed\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.OrbitalStrikeCharactersKilled))
	}
	if in.OrbitalStrikeDamageToPlayersArmorAmount != 0 {
		const prefix string = ",\"orbital_strike_damage_to_players_armor_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.OrbitalStrikeDamageToPlayersArmorAmount))
	}
	if in.OrbitalStrikeDamageToPlayersShieldAmount != 0 {
		const prefix string = ",\"orbital_strike_damage_to_players_shield_amount\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.OrbitalStrikeDamageToPlayersShieldAmount))
	}
	if in.PveDungeonsCompletedAgent != 0 {
		const prefix string = ",\"pve_dungeons_completed_agent\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.PveDungeonsCompletedAgent))
	}
	if in.PveDungeonsCompletedDistribution != 0 {
		const prefix string = ",\"pve_dungeons_completed_distribution\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.PveDungeonsCompletedDistribution))
	}
	if in.PveMissionsSucceeded != 0 {
		const prefix string = ",\"pve_missions_succeeded\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.PveMissionsSucceeded))
	}
	if in.PveMissionsSucceededEpicArc != 0 {
		const prefix string = ",\"pve_missions_succeeded_epic_arc\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.PveMissionsSucceededEpicArc))
	}
	if in.SocialAddContactBad != 0 {
		const prefix string = ",\"social_add_contact_bad\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddContactBad))
	}
	if in.SocialAddContactGood != 0 {
		const prefix string = ",\"social_add_contact_good\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddContactGood))
	}
	if in.SocialAddContactHigh != 0 {
		const prefix string = ",\"social_add_contact_high\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddContactHigh))
	}
	if in.SocialAddContactHorrible != 0 {
		const prefix string = ",\"social_add_contact_horrible\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddContactHorrible))
	}
	if in.SocialAddContactNeutral != 0 {
		const prefix string = ",\"social_add_contact_neutral\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddContactNeutral))
	}
	if in.SocialAddNote != 0 {
		const prefix string = ",\"social_add_note\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddNote))
	}
	if in.SocialAddedAsContactBad != 0 {
		const prefix string = ",\"social_added_as_contact_bad\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddedAsContactBad))
	}
	if in.SocialAddedAsContactGood != 0 {
		const prefix string = ",\"social_added_as_contact_good\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddedAsContactGood))
	}
	if in.SocialAddedAsContactHigh != 0 {
		const prefix string = ",\"social_added_as_contact_high\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddedAsContactHigh))
	}
	if in.SocialAddedAsContactHorrible != 0 {
		const prefix string = ",\"social_added_as_contact_horrible\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddedAsContactHorrible))
	}
	if in.SocialAddedAsContactNeutral != 0 {
		const prefix string = ",\"social_added_as_contact_neutral\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialAddedAsContactNeutral))
	}
	if in.SocialCalendarEventCreated != 0 {
		const prefix string = ",\"social_calendar_event_created\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialCalendarEventCreated))
	}
	if in.SocialChatMessagesAlliance != 0 {
		const prefix string = ",\"social_chat_messages_alliance\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesAlliance))
	}
	if in.SocialChatMessagesConstellation != 0 {
		const prefix string = ",\"social_chat_messages_constellation\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesConstellation))
	}
	if in.SocialChatMessagesCorporation != 0 {
		const prefix string = ",\"social_chat_messages_corporation\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesCorporation))
	}
	if in.SocialChatMessagesFleet != 0 {
		const prefix string = ",\"social_chat_messages_fleet\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesFleet))
	}
	if in.SocialChatMessagesRegion != 0 {
		const prefix string = ",\"social_chat_messages_region\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesRegion))
	}
	if in.SocialChatMessagesSolarsystem != 0 {
		const prefix string = ",\"social_chat_messages_solarsystem\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesSolarsystem))
	}
	if in.SocialChatMessagesWarfaction != 0 {
		const prefix string = ",\"social_chat_messages_warfaction\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatMessagesWarfaction))
	}
	if in.SocialChatTotalMessageLength != 0 {
		const prefix string = ",\"social_chat_total_message_length\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialChatTotalMessageLength))
	}
	if in.SocialDirectTrades != 0 {
		const prefix string = ",\"social_direct_trades\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialDirectTrades))
	}
	if in.SocialFleetBroadcasts != 0 {
		const prefix string = ",\"social_fleet_broadcasts\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialFleetBroadcasts))
	}
	if in.SocialFleetJoins != 0 {
		const prefix string = ",\"social_fleet_joins\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialFleetJoins))
	}
	if in.SocialMailsReceived != 0 {
		const prefix string = ",\"social_mails_received\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialMailsReceived))
	}
	if in.SocialMailsSent != 0 {
		const prefix string = ",\"social_mails_sent\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.SocialMailsSent))
	}
	if in.TravelAccelerationGateActivations != 0 {
		const prefix string = ",\"travel_acceleration_gate_activations\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelAccelerationGateActivations))
	}
	if in.TravelAlignTo != 0 {
		const prefix string = ",\"travel_align_to\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelAlignTo))
	}
	if in.TravelDistanceWarpedHighSec != 0 {
		const prefix string = ",\"travel_distance_warped_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDistanceWarpedHighSec))
	}
	if in.TravelDistanceWarpedLowSec != 0 {
		const prefix string = ",\"travel_distance_warped_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDistanceWarpedLowSec))
	}
	if in.TravelDistanceWarpedNullSec != 0 {
		const prefix string = ",\"travel_distance_warped_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDistanceWarpedNullSec))
	}
	if in.TravelDistanceWarpedWormhole != 0 {
		const prefix string = ",\"travel_distance_warped_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDistanceWarpedWormhole))
	}
	if in.TravelDocksHighSec != 0 {
		const prefix string = ",\"travel_docks_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDocksHighSec))
	}
	if in.TravelDocksLowSec != 0 {
		const prefix string = ",\"travel_docks_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDocksLowSec))
	}
	if in.TravelDocksNullSec != 0 {
		const prefix string = ",\"travel_docks_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelDocksNullSec))
	}
	if in.TravelJumpsStargateHighSec != 0 {
		const prefix string = ",\"travel_jumps_stargate_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelJumpsStargateHighSec))
	}
	if in.TravelJumpsStargateLowSec != 0 {
		const prefix string = ",\"travel_jumps_stargate_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelJumpsStargateLowSec))
	}
	if in.TravelJumpsStargateNullSec != 0 {
		const prefix string = ",\"travel_jumps_stargate_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelJumpsStargateNullSec))
	}
	if in.TravelJumpsWormhole != 0 {
		const prefix string = ",\"travel_jumps_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelJumpsWormhole))
	}
	if in.TravelWarpsHighSec != 0 {
		const prefix string = ",\"travel_warps_high_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsHighSec))
	}
	if in.TravelWarpsLowSec != 0 {
		const prefix string = ",\"travel_warps_low_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsLowSec))
	}
	if in.TravelWarpsNullSec != 0 {
		const prefix string = ",\"travel_warps_null_sec\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsNullSec))
	}
	if in.TravelWarpsToBookmark != 0 {
		const prefix string = ",\"travel_warps_to_bookmark\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsToBookmark))
	}
	if in.TravelWarpsToCelestial != 0 {
		const prefix string = ",\"travel_warps_to_celestial\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsToCelestial))
	}
	if in.TravelWarpsToFleetMember != 0 {
		const prefix string = ",\"travel_warps_to_fleet_member\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsToFleetMember))
	}
	if in.TravelWarpsToScanResult != 0 {
		const prefix string = ",\"travel_warps_to_scan_result\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsToScanResult))
	}
	if in.TravelWarpsWormhole != 0 {
		const prefix string = ",\"travel_warps_wormhole\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.TravelWarpsWormhole))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetCharactersCharacterIdStats200Ok) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetCharactersCharacterIdStats200Ok) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAd4e6987EncodeGithubComAntihaxGoesiEsi1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetCharactersCharacterIdStats200Ok) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetCharactersCharacterIdStats200Ok) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAd4e6987DecodeGithubComAntihaxGoesiEsi1(l, v)
}
